<?php

use Drupal\Core\File\FileSystemInterface;
use \Drupal\node\Entity\Node;

/**
 * Implements hook_cron()
 */
function api_layer_cron() {

    $apis = \Drupal::config('api_layer.settings')->get('sources');

    if (!empty($apis))
    {
        foreach ($apis as $source => $api)
        {
            $url = $api['base_uri'].'?'.$api['params'];
            $resource = \Drupal::service('api_layer.http_client')->get($url);

            if (!empty($resource)) {
                foreach ($resource[$api['start']] as $item)
                {

                    $hash = md5($item['title']);
                    $query = \Drupal::entityQuery('node')
                    ->condition('type', 'external')
                    ->condition('field_hash', $hash)
                    ->accessCheck(TRUE);
                    $results = $query->execute();
                    if (empty($results)) 
                    {
                        $job = [
                            'item' => $item,
                            'source' => $source
                        ];
                        Drupal::queue('api_layer_news')->createItem($job);
                    }
                }
            }

        }
    }
}


function api_layer_source_blacklist(string $source) : bool
{
    $blacklist = [
        'Yahoo Entertainment',
        'Compradiccion.com',
        'Revistagq.com',
        'Pagina/12',
        'La Nacion',
        'Terra.com.br',
        'Cnnbrasil.com.br',
        'Tudocelular.com'
    ];

    if (in_array($source, $blacklist)) 
    {
        return true;
    }

    return false;
}

function api_layer_mediastack_to_entity(array $item) : bool
{
    if (api_layer_source_blacklist($item['source']))
    {
        return false;
    }

    if (!empty($item['image']) && $image = file_get_contents($item['image']))
    {

        $name = basename($item['image']);
        $directory = 'public://external/image';
        $destination = $directory.'/'.$name; 

        $file_system = \Drupal::service('file_system');
        $file_system->prepareDirectory($directory, FileSystemInterface:: CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
        $fileRepository = \Drupal::service('file.repository');
        $file = $fileRepository->writeData($image, $destination,FileSystemInterface::EXISTS_REPLACE);

        $hash = md5($item['title']);

        $node = Node::create([
            'type' => 'external',
            'title' => $item['title'],
            'body' => $item['description'],
            'field_url' => $item['url'],
            'field_extenal_image' => [
                'target_id' => $file->id(),
                'alt' => $item['title'],
                'title' => $item['title']
            ],
            'field_source' => $item['source'],
            'field_categoria' => ['target_id' => 2],
            'field_hash' => $hash
        ]);
        $node->setOwnerId(3);
        $node->save();
    }
    return true;
}

function api_layer_newsapi_to_entity(array $item) : bool
{
    if (api_layer_source_blacklist($item['source']['name']))
    {
        return false;
    }

    if (!empty($item['urlToImage']) && $image = file_get_contents($item['urlToImage']))
    {
        $name = basename($item['urlToImage']);
        $directory = 'public://external/image';
        $destination = $directory.'/'.$name; 
        $file_system = \Drupal::service('file_system');
        $file_system->prepareDirectory($directory, FileSystemInterface:: CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
        $fileRepository = \Drupal::service('file.repository');
        $file = $fileRepository->writeData($image, $destination,FileSystemInterface::EXISTS_REPLACE);

        $hash = md5($item['title']);

        $node = Node::create([
            'type' => 'external',
            'title' => $item['title'],
            'body' => $item['description'],
            'field_url' => $item['url'],
            'field_extenal_image' => [
                'target_id' => $file->id(),
                'alt' => $item['title'],
                'title' => $item['title']
            ],
            'field_source' => $item['source']['name'],
            'field_categoria' => ['target_id' => 2],
            'field_hash' => $hash
        ]);
        $node->setOwnerId(3);
        $node->save();   
    }
    return true;
}